[client]

# Client default connection port socket
port        = 3306


[mysqld]

# MySQL server listening port
port        = 3306

# MySQL startup user
# user        = sqlhubUser

# Indicates listening to IPv4 address
bind-address	=	0.0.0.0


# This parameter is used to cache the index parameters of MyISAM storage engine, and increase it to get better indexes (for all reads and multiple rewrites). It is the InnoDB storage engine by default. This parameter can be set as small as 64M.
# The system will start to page change and really slow down. For servers with 4GB memory, this parameter can be set to 384m or 512M. By checking the status value key_ read_ Requests and key_ readsï¼Œ
# You can know the key_ buffer_ Whether the size setting is reasonable. Ratio key_ reads/key_ read_ Requests should be as low as possible,  
# At least 1:100, 1:1000 is better (the above status value can use show status like 'key_ Read% '). Note: if the parameter value is set too large, the overall efficiency of the server will be reduced
key_buffer_size	= 	128M


# Allows the maximum size of received packets and prevents the server from sending too large packets. Increasing the value of this variable is safe because additional memory is allocated only when needed. For example, mysqld allocates more memory only if you issue a long query or mysqld must return a large result row. It can be set to 16MB or more, but setting it too large can be dangerous.
# The smaller default value of this variable is a preventive measure to catch error packets between the client and the server, and to ensure that memory overflow is not caused by accidental use of large packets.
max_allowed_packet	=	16M


# The number of connections MySQL can have. This works when the main MySQL thread gets a lot of connection requests in a short period of time,  
# The main thread then takes some time (though short) to check the connection and start a new thread. back_ The log value indicates how many requests can be stored in the stack for a short period of time before MySQL temporarily stops answering new requests.
# If you expect a lot of connections in a short period of time, you need to increase it. In other words, if the connection data of MySQL reaches max_ When connections is set, new requests will be stored in the stack,  
# To wait for a connection to release resources, the number of this stack is called back_ Log, if the number of waiting connections exceeds back_ Log, will not be granted connection resources.  
# In addition, this value (back)_ Log) is limited to the size of your operating system's listening queue for incoming TCP / IP connections.  
# Your operating system has its own limit on the size of this queue (you can check your OS documentation to find out the maximum value of this variable). Try to set back_ Log above the limit of your operating system will be invalid.
back_log 	=	200


# It is generally recommended to set the number of CPUs * 2
#thread_concurrency = 6


# This parameter is used to set the maximum number of connections in MySQL. The default value is 100. Generally, it can be set to 512-1000. Too many connections can lead to excessive memory usage and lock your MySQL server. Generally, small websites need 100-200 connections, while larger websites may need 500-800 or more. The value here depends largely on your usage of MySQL / MariaDB.
# If the server has a large number of concurrent connection requests, it is recommended to increase the number of parallel connections by increasing this value. Of course, this is based on the condition that the machine can support it. If the number of connections is more, MySQL will provide connection buffer for each connection, which will cost more memory. Therefore, it is necessary to adjust the value appropriately and not blindly increase the setting value. You can use the 'conn%' wildcard to see the number of connections in the current state to determine the size of the value.
max_connections = 200


# Set the maximum number of files opened by MySQL and the file descriptor limit opened by mysql. The default minimum is 1024. When open_ files_ When limit is not configured, compare max_ The value of connections * 5 and ulimit - N, which is the most important one.
open_files_limit = 2048


# log-bin=mysql-bin


# Specifies that the log format is mixed
# binlog_format=mixed


# When a transaction is not committed, the log generated will be recorded in the cache; when the transaction commit needs to be committed, the log will be persisted to disk. The default size of this value is 32K, which can be set by yourself.
# binlog_cache_size = 64K


#It means that the serial number of the local machine is 1, and a unique ID number is assigned to the server; the value range of n is 1 ~ 2 to the 32nd power to enable the binary log function. It is used when copying data synchronization. Generally speaking, it means master
server-id    = 1


#It refers to the number of days that binlog is deleted for more than 30 days, and the number of days to keep the log after enabling binary log. The server will automatically clean up the log files before the specified number of days. If it is not set, the server will run out of space. It is generally set for 7-30 days.
expire_logs_days = 30
